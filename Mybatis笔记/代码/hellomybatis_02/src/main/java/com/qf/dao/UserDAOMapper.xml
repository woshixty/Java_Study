<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qf.dao.UserDAO">
    <!-- 二级缓存默认开启的，但并不是所有的查询结果，都会进入二级缓存 -->
    <cache/>
    <!-- 抽取重复sql片段 -->
    <sql id="user_field">
        select id,username,password,gender,regist_time registTime
        from t_user where id>(select id from t_employees where id=1)
    </sql>

    <select id="queryUsers" resultType="User">
        <!-- 引用sql片段 -->
        <include refid="user_field"/>
    </select>

    <!--<select id="queryUserById" resultType="User">
        <include refid="user_field"/>
        where id=#{id}
    </select>
    <select id="queryUserByUsername" resultType="User">
        <include refid="user_field"/>
        where username=#{username}
    </select>-->

    <!--  select id,username,password,gender,regist_time registTime
          from t_user
          where id=#{id}


          select id,username,password,gender,regist_time registTime
          from t_user
          where username=#{username}
         -->
    <select id="queryUser" resultType="User">
        <include refid="user_field"/>
        where
        <if test="id!=null">
            id=#{id}
        </if>
        <if test="username!=null">
            username=#{username}
        </if>
    </select>

    <!--
        select id,username,password,gender,regist_time registTime
          from t_user
          where or gender=#{gender}
     -->
    <select id="queryUser2" resultType="User">
        <include refid="user_field"/>
        <!-- where标签：
             1. 补充where关键字
             2. 识别where子句中如果 以or，and开头，会将or，and去除
         -->
        <!--<where>
            <if test="username!=null">
                username=#{username}
            </if>
            <if test="gender!=null">
                and gender=#{gender}
            </if>
        </where>-->

        <!--  prefix="where" 补充where关键字
              prefixOverrides="or|and"  where子句中如果以or或and开头，会被覆盖
        -->
        <trim prefix="where" prefixOverrides="or|and">
            <if test="username!=null">
                username=#{username}
            </if>
            <if test="gender!=null">
                and gender=#{gender}
            </if>
        </trim>

    </select>

    <delete id="deleteUser" parameterType="int">
        delete from t_user
        where id=#{id}
    </delete>

    <update id="updateUser" parameterType="User">
        update t_user
        <!--
               1. 补充set
               2. 自动将set子句的最后的逗号去除
        -->
        <!--<set>
            <if test="username!=null">
                username=#{username},
            </if>
            <if test="password!=null">
                password=#{password},
            </if>
            <if test="gender!=null">
                gender=#{gender},
            </if>
            <if test="registTime!=null">
                regist_time=#{registTime}
            </if>
        </set>-->
        <!-- prefix="set" 补充一个set
             suffixOverrides=","    自动将set子句的最后的逗号去除
         -->
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">
                username=#{username},
            </if>
            <if test="password!=null">
                password=#{password},
            </if>
            <if test="gender!=null">
                gender=#{gender},
            </if>
            <if test="registTime!=null">
                regist_time=#{registTime}
            </if>
        </trim>
        where id=#{id}
    </update>

    <insert id="insertUser" parameterType="User">
            <!-- 主键回填，将新数据的ID，存入java对象的和主键对应的属性中 -->
            <selectKey order="AFTER" resultType="int" keyProperty="id">
                select last_insert_id()
            </selectKey>
        insert into t_user values(#{id},#{username},#{password},#{gender},#{registTime})
    </insert>

    <delete id="deleteManyUser" parameterType="java.util.List">
        <!--delete from t_user where id in (x,x,x,x,x,x)-->
        delete from t_user where id in
        <foreach collection="list" open="(" close=")" item="id9" separator=",">
            #{id9}
        </foreach>
    </delete>

    <insert id="insertManyUser" parameterType="java.util.List">
        <!--insert into t_user (null,x,x,x,x,x,x),(null,xxxx,xxx,xx)-->
        insert into t_user values
        <foreach collection="list" close="" open="" item="user9" separator=",">
            (null,#{user9.username},#{user9.password},#{user9.gender},#{user9.registTime})
        </foreach>
    </insert>
</mapper>